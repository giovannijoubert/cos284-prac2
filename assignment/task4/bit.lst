     1                                 %line 1+1 bit.asm
     2                                  SYS_EXIT equ 1
     3                                  SYS_READ equ 3
     4                                  SYS_WRITE equ 4
     5                                  STDIN equ 0
     6                                  STDOUT equ 1
     7                                 
     8                                 [segment .data]
     9 00000000 506C6561736520696E-     msg db "Please input a number: "
    10 00000000 7075742061206E756D-
    11 00000000 6265723A20         
    12                                  len equ $- msg
    13 00000017 0A                      endl: db "",0x0a
    14 00000018 00                      num db 0
    15 00000019 0A                      ten db 10
    16                                 
    17                                 [segment .bss]
    18                                 
    19 00000000 <gap>                   number1 resw 2
    20 00000004 <gap>                   num1ten resw 1
    21 00000006 <gap>                   num1one resw 1
    22 00000008 <gap>                   result resw 1
    23 0000000A <gap>                   result1 resw 1
    24                                 
    25                                 [segment .text]
    26                                 
    27                                 [global _start]
    28                                 
    29                                  _start:
    30                                 
    31 00000000 B804000000              mov eax, SYS_WRITE
    32 00000005 BB01000000              mov ebx, STDOUT
    33 0000000A B9[00000000]            mov ecx, msg
    34 0000000F BA17000000              mov edx, len
    35 00000014 CD80                    int 0x80
    36                                 
    37 00000016 B803000000              mov eax, SYS_READ
    38 0000001B BB00000000              mov ebx, STDIN
    39 00000020 B9[00000000]            mov ecx, number1
    40 00000025 BA03000000              mov edx, 3
    41 0000002A CD80                    int 0x80
    42                                 
    43                                 
    44                                 
    45 0000002C 48C7C000000000          mov rax, 0
    46 00000033 668B0425[00000000]      mov ax, [number1]
    47                                 
    48                                 
    49                                 
    50 0000003B 66C1E808                shr ax, 8
    51 0000003F 6683E830                sub ax, '0'
    52 00000043 66890425[00000000]      mov [num1one], ax
    53 0000004B 48C7C000000000          mov rax, 0
    54 00000052 668B0425[00000000]      mov ax, [number1]
    55 0000005A 66B9FF00                mov cx, 0x00FF
    56 0000005E 6621C8                  and ax, cx
    57 00000061 6683E830                sub ax, '0'
    58 00000065 66890425[00000000]      mov [num1ten], ax
    59                                 
    60                                 
    61                                 
    62                                 
    63                                 
    64                                 
    65 0000006D 49C7C200000000          mov r10, 0
    66 00000074 448A1425[00000000]      mov r10b, [num1ten]
    67 0000007C 49C7C300000000          mov r11, 0
    68 00000083 448A1C25[00000000]      mov r11b, [num1one]
    69                                 
    70 0000008B 66440FAF1425[000000-     imul r10w, [ten]
    71 0000008B 00]                
    72                                 
    73 00000095 664501DA                add r10w, r11w
    74                                 
    75 00000099 6641BD0000              mov r13w, 0
    76 0000009E 664589D5                mov r13w, r10w
    77 000000A2 664183ED01              sub r13w, 1
    78 000000A7 664521EA                and r10w, r13w
    79                                 
    80 000000AB 664183FA00              cmp r10w, 0
    81 000000B0 7405                    jz zero
    82 000000B2 6641BA0100              mov r10w, 1
    83 000000B7 EB03                    jmp one
    84                                 
    85 000000B9 6641BA0000             zero: mov r10w, 0
    86                                 one:
    87                                 
    88 000000BE 664183C230              add r10w, '0'
    89                                 
    90 000000C3 6644891425[00000000]      mov [result], r10w
    91                                 
    92                                 
    93 000000CC B804000000              mov eax, SYS_WRITE
    94 000000D1 BB01000000              mov ebx, STDOUT
    95 000000D6 B9[00000000]            mov ecx, result
    96 000000DB BA01000000              mov edx, 1
    97 000000E0 CD80                    int 0x80
    98                                 
    99 000000E2 B801000000              mov eax,1
   100 000000E7 BF01000000              mov edi,1
   101 000000EC BA01000000              mov edx, 1
   102 000000F1 488D3425[00000000]      lea rsi,[endl]
   103 000000F9 0F05                    syscall
   104                                 
   105                                 
   106                                 exit:
   107 000000FB B801000000              mov eax, SYS_EXIT
   108 00000100 31DB                    xor ebx, ebx
   109 00000102 CD80                    int 0x80
