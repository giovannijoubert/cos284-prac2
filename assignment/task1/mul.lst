     1                                 %line 1+1 mul.asm
     2                                  SYS_EXIT equ 1
     3                                  SYS_READ equ 3
     4                                  SYS_WRITE equ 4
     5                                  STDIN equ 0
     6                                  STDOUT equ 1
     7                                 
     8                                 [segment .data]
     9 00000000 506C6561736520696E-     msg db "Please input the first number: "
    10 00000000 707574207468652066-
    11 00000000 69727374206E756D62-
    12 00000000 65723A20           
    13                                  len equ $- msg
    14 0000001F 0A                      endl: db "",0x0a
    15                                 
    16                                 [segment .bss]
    17                                 
    18 00000000 <gap>                   number1 resb 2
    19 00000002 <gap>                   number2 resb 2
    20 00000004 <gap>                   result resb 1
    21 00000005 <gap>                   result1 resb 1
    22                                 
    23                                 [segment .text]
    24                                 
    25 00000000 506C6561736520696E-     msg2 db "Please input the second number: "
    26 00000000 707574207468652073-
    27 00000000 65636F6E64206E756D-
    28 00000000 6265723A20         
    29                                  len2 equ $- msg2
    30                                 
    31                                  len3 equ $- msg3
    32                                 
    33                                 [global _start]
    34                                 
    35                                  _start:
    36                                 
    37 00000020 B804000000              mov eax, SYS_WRITE
    38 00000025 BB01000000              mov ebx, STDOUT
    39 0000002A B9[00000000]            mov ecx, msg
    40 0000002F BA1F000000              mov edx, len
    41 00000034 CD80                    int 0x80
    42                                 
    43 00000036 B803000000              mov eax, SYS_READ
    44 0000003B BB00000000              mov ebx, STDIN
    45 00000040 B9[00000000]            mov ecx, number1
    46 00000045 BA02000000              mov edx, 2
    47 0000004A CD80                    int 0x80
    48                                 
    49 0000004C B804000000              mov eax, SYS_WRITE
    50 00000051 BB01000000              mov ebx, STDOUT
    51 00000056 B9[00000000]            mov ecx, msg2
    52 0000005B BA20000000              mov edx, len2
    53 00000060 CD80                    int 0x80
    54                                 
    55 00000062 B803000000              mov eax, SYS_READ
    56 00000067 BB00000000              mov ebx, STDIN
    57 0000006C B9[00000000]            mov ecx, number2
    58 00000071 BA02000000              mov edx, 2
    59 00000076 CD80                    int 0x80
    60                                 
    61 00000078 B804000000              mov eax, SYS_WRITE
    62 0000007D BB01000000              mov ebx, STDOUT
    63 00000082 B9[00000000]            mov ecx, msg3
    64 00000087 BA00000000              mov edx, len3
    65 0000008C CD80                    int 0x80
    66                                 
    67                                 
    68 0000008E 488B0425[00000000]      mov rax, [number1]
    69 00000096 4883E830                sub rax, '0'
    70                                 
    71 0000009A 488B1C25[00000000]      mov rbx, [number2]
    72 000000A2 4883EB30                sub rbx, '0'
    73                                 
    74                                 
    75 000000A6 48F7E3                  mul rbx
    76                                 
    77 000000A9 48C7C200000000          mov rdx, 0
    78 000000B0 66B90A00                mov cx, 10
    79 000000B4 66F7F9                  idiv cx
    80 000000B7 4989C1                  mov r9, rax
    81 000000BA 4989D2                  mov r10, rdx
    82                                 
    83                                 
    84 000000BD 4983C130                add r9, '0'
    85 000000C1 4983C230                add r10, '0'
    86                                 
    87                                 
    88 000000C5 4C890C25[00000000]      mov [result], r9
    89 000000CD 4C891425[00000000]      mov [result1], r10
    90                                 
    91                                 
    92 000000D5 B804000000              mov eax, SYS_WRITE
    93 000000DA BB01000000              mov ebx, STDOUT
    94 000000DF B9[00000000]            mov ecx, result
    95 000000E4 BA01000000              mov edx, 1
    96 000000E9 CD80                    int 0x80
    97                                 
    98                                 
    99                                 
   100 000000EB B804000000              mov eax, SYS_WRITE
   101 000000F0 BB01000000              mov ebx, STDOUT
   102 000000F5 B9[00000000]            mov ecx, result1
   103 000000FA BA01000000              mov edx, 1
   104 000000FF CD80                    int 0x80
   105                                 
   106 00000101 B801000000              mov eax,1
   107 00000106 BF01000000              mov edi,1
   108 0000010B BA01000000              mov edx, 1
   109 00000110 488D3425[00000000]      lea rsi,[endl]
   110 00000118 0F05                    syscall
   111                                 
   112                                 
   113                                 exit:
   114 0000011A B801000000              mov eax, SYS_EXIT
   115 0000011F 31DB                    xor ebx, ebx
   116 00000121 CD80                    int 0x80
