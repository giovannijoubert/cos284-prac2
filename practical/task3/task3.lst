     1                                 %line 1+1 task3.asm
     2                                 [segment .data]
     3 00000000 506C6561736520696E-     init: db "Please input an integer: ",0x0a
     4 00000000 70757420616E20696E-
     5 00000000 74656765723A200A   
     6 0000001A 54686520746F74616C-     msg: db "The total sum is: ",0x0a
     7 0000001A 2073756D2069733A20-
     8 0000001A 0A                 
     9 0000002D 0A                      endl: db "",0x0a
    10                                 [segment .bss]
    11 00000000 <gap>                   res1: resb 10
    12 0000000A <gap>                   inpt: resb 10
    13 00000014 <gap>                   out1: resb 1
    14 00000015 <gap>                   buffer: resb 20
    15                                 [segment .text]
    16                                 [global _start]
    17                                 _start:
    18                                 
    19 00000000 B801000000              mov eax,1
    20 00000005 BF01000000              mov edi,1
    21 0000000A BA19000000              mov edx, 25
    22 0000000F 488D3425[00000000]      lea rsi,[init]
    23 00000017 0F05                    syscall
    24                                 
    25                                 
    26 00000019 B800000000              mov eax,0
    27 0000001E BF00000000              mov edi,0
    28 00000023 BAC8000000              mov edx, 200
    29 00000028 488D3425[00000000]      lea rsi,[inpt]
    30 00000030 0F05                    syscall
    31                                 
    32                                 
    33 00000032 B801000000              mov eax,1
    34 00000037 BF01000000              mov edi,1
    35 0000003C BA12000000              mov edx, 18
    36 00000041 488D3425[00000000]      lea rsi,[msg]
    37 00000049 0F05                    syscall
    38                                 
    39                                 
    40                                 
    41                                 
    42 0000004B 4D31FF                  xor r15, r15
    43 0000004E 4D31DB                  xor r11, r11
    44 00000051 4D31D2                  xor r10, r10
    45                                 a2d:
    46 00000054 4180BF[00000000]00      cmp byte[inpt+r15], 0
    47 0000005C 7419                    je a2dend
    48                                 
    49 0000005E B800000000              mov eax, 0
    50 00000063 418A87[00000000]        mov al, byte[inpt+r15]
    51                                 
    52 0000006A 2C30                    sub al, '0'
    53 0000006C 4D6BD20A                imul r10, 10
    54 00000070 4100C2                  add r10b, al
    55                                 
    56 00000073 4983C701                add r15, 1
    57 00000077 EBD9                    jmp a2d
    58                                 a2dend:
    59                                 
    60                                 
    61 00000079 4831C0                  xor rax, rax
    62 0000007C 4831D2                  xor rdx, rdx
    63 0000007F 4831C9                  xor rcx, rcx
    64 00000082 4D31E4                  xor r12, r12
    65 00000085 4C89D0                  mov rax, r10
    66                                 cloop:
    67 00000088 4883F800                cmp rax, 0
    68 0000008C 7406                    je cloopend
    69                                 
    70 0000008E 4901C4                  add r12, rax
    71 00000091 48FFC8                  dec rax
    72                                 
    73 00000094 EBF0                    jmp cloop
    74                                 cloopend:
    75                                 
    76                                 
    77                                 
    78                                 
    79 00000096 4831C0                  xor rax,rax
    80 00000099 4831DB                  xor rbx,rbx
    81 0000009C 4831C9                  xor rcx,rcx
    82 0000009F 4831D2                  xor rdx,rdx
    83 000000A2 4D31D2                  xor r10, r10
    84 000000A5 4D31DB                  xor r11, r11
    85                                 
    86 000000A8 4C89E0                  mov rax, r12
    87 000000AB 49BA000064A7B3B6E0-     mov r10, 1000000000000000000
    88 000000AB 0D                 
    89                                 
    90                                 divloop:
    91 000000B5 4831C0                  xor rax,rax
    92 000000B8 4831DB                  xor rbx,rbx
    93 000000BB 4831C9                  xor rcx,rcx
    94 000000BE 4831D2                  xor rdx,rdx
    95                                 
    96 000000C1 4C89E0                  mov rax, r12
    97 000000C4 4C89D1                  mov rcx, r10
    98                                 
    99 000000C7 48F7F9                  idiv rcx
   100                                 
   101 000000CA 4883F800                cmp rax, 0
   102 000000CE 7F1C                    jg divloopend
   103                                 
   104 000000D0 4831C0                  xor rax,rax
   105 000000D3 4831DB                  xor rbx,rbx
   106 000000D6 4831C9                  xor rcx,rcx
   107 000000D9 4831D2                  xor rdx,rdx
   108                                 
   109 000000DC 4C89D0                  mov rax, r10
   110 000000DF 48C7C10A000000          mov rcx, 10
   111                                 
   112 000000E6 48F7F9                  idiv rcx
   113                                 
   114 000000E9 4989C2                  mov r10, rax
   115                                 
   116 000000EC EBC5                    jmp divloop
   117                                 divloopend:
   118                                 
   119                                 
   120                                 outloop:
   121 000000EE 4983FA01                cmp r10, 1
   122 000000F2 7E59                    jle outloopend
   123                                 
   124 000000F4 4831C0                  xor rax,rax
   125 000000F7 4831DB                  xor rbx,rbx
   126 000000FA 4831C9                  xor rcx,rcx
   127 000000FD 4831D2                  xor rdx,rdx
   128                                 
   129 00000100 4C89E0                  mov rax, r12
   130 00000103 4C89D1                  mov rcx, r10
   131                                 
   132 00000106 48F7F9                  idiv rcx
   133                                 
   134 00000109 4989D4                  mov r12, rdx
   135                                 
   136                                 
   137                                 
   138 0000010C 4883C030                add rax, '0'
   139                                 
   140 00000110 48890425[00000000]      mov [res1], rax
   141 00000118 B801000000              mov eax,1
   142 0000011D BF01000000              mov edi,1
   143 00000122 BA01000000              mov edx, 1
   144 00000127 488D3425[00000000]      lea rsi, [res1]
   145 0000012F 0F05                    syscall
   146                                 
   147 00000131 4831C0                  xor rax,rax
   148 00000134 4831DB                  xor rbx,rbx
   149 00000137 4831C9                  xor rcx,rcx
   150 0000013A 4831D2                  xor rdx,rdx
   151                                 
   152 0000013D 4C89D0                  mov rax, r10
   153 00000140 48C7C10A000000          mov rcx, 10
   154                                 
   155 00000147 48F7F9                  idiv rcx
   156                                 
   157 0000014A 4989C2                  mov r10, rax
   158                                 
   159 0000014D EB9D                    jmp outloop
   160                                 outloopend:
   161                                 
   162 0000014F 4983C430                add r12, '0'
   163 00000153 4C892425[00000000]      mov [res1], r12
   164 0000015B B801000000              mov eax,1
   165 00000160 BF01000000              mov edi,1
   166 00000165 BA01000000              mov edx, 1
   167 0000016A 488D3425[00000000]      lea rsi, [res1]
   168 00000172 0F05                    syscall
   169                                 
   170                                 
   171 00000174 B801000000              mov eax,1
   172 00000179 BF01000000              mov edi,1
   173 0000017E BA01000000              mov edx, 1
   174 00000183 488D3425[00000000]      lea rsi, [endl]
   175 0000018B 0F05                    syscall
   176                                 
   177                                 
   178 0000018D B83C000000              mov eax,60
   179 00000192 31FF                    xor edi, edi
   180 00000194 0F05                    syscall
